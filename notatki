Kazdy obiekt ma swoj material.
Material sklada sie z: shaderow (vertex, fragment, ...) i parametrow dla tych shaderow

Podczas renderowania obiektu shadery musza dostac:
1) Parametry zdefiniowane w materiale dla shaderow
2) Macierze projection i view (globalne dla sceny)
3) Macierz modelu (dla kazdego obiektu inna)
4) Macierz parenta (dla kazdego obiektu inna) lub identycznosc (w przypadku braku parenta)

Drzewo zawierania:

Scena
|- projection matrix
|- view matrix (kamera)
|- renderable object
   |- model matrix
   |- parent model matrix



Przyklad renderowania

object.render = {
  val matrix = parent.modelMatrix * this.modelMatrix
  this.material
    .with("modelMatrix", matrix)
    .bind()
}

Material:
  shader program
  bind() - glUseProgram()
  with(attributeName, matrix)
  with(attributeName, matrix)
  with(attributeName, vector)
  with(attributeName, vector)
